<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring       http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean
        class="org.apache.camel.component.jackson.ListJacksonDataFormat" id="taskFormat">
        <property name="unmarshalType" value="io.example.openapi.model.Task"/>
    </bean>
    <bean class="io.example.openapi.TaskNoteAggregationStrategy" id="taskNoteAggregationStrategy"/>
    <camelContext id="context-9da96071-5e22-433c-abe6-f7cbfd4b5578" xmlns="http://camel.apache.org/schema/spring">
        <onException>
            <exception>java.lang.Exception</exception>
            <handled>
                <constant>true</constant>
            </handled>
            <setHeader headerName="Exchange.HTTP_RESPONSE_CODE">
                <constant>500</constant>
            </setHeader>
            <setBody>
                <simple>${exception.message}</simple>
            </setBody>
        </onException>
        <restConfiguration apiContextPath="/openapi.json" component="servlet"/>
        <rest enableCORS="true" id="rest-for-openapi-document" path="/">
            <get id="openapi.json" produces="application/json" uri="openapi.json">
                <description>Gets the OpenAPI document for this service</description>
                <route id="route-for-openapi-document">
                    <setHeader headerName="Exchange.CONTENT_TYPE" id="setHeader-for-openapi-document">
                        <constant>application/vnd.oai.openapi+json</constant>
                    </setHeader>
                    <setBody id="setBody-for-openapi-document">
                        <constant>resource:classpath:openapi.json</constant>
                    </setBody>
                </route>
            </get>
        </rest>
        <rest bindingMode="json" enableCORS="true" id="restTask">
            <post id="postTask" uri="/task">
                <param name="body" required="false" type="body"/>
                <to uri="direct:restPostTask"/>
            </post>
            <get id="getTaskById" uri="/task/{id}">
                <description>Get a task by ID.</description>
                <to uri="direct:restGetTaskById"/>
            </get>
            <get id="getTasks" uri="/task">
                <description>Get a task by ID.</description>
                <to uri="direct:restGetTasks"/>
            </get>
            <get id="getNoteById" uri="/note/{id}">
                <description>Get a note by ID.</description>
                <to uri="direct:restGetNoteById"/>
            </get>
            <delete id="deleteTask" uri="/task/{id}">
                <description>Delete a task by ID.</description>
                <to uri="direct:restDeleteTask"/>
            </delete>
        </rest>
        <route id="postTaskRoute">
            <from id="_from2" uri="direct:restPostTask"/>
            <to id="_to2" uri="direct:501"/>
        </route>
        <route id="getTaskByIdRoute">
            <from id="_from3" uri="direct:restGetTaskById"/>
            <to id="_to3" uri="direct:501"/>
        </route>
        <route id="getTasksRoute">
            <from id="_from1" uri="direct:restGetTasks"/>
            <to id="_to5" uri="direct:prepareRequest"/>
            <setHeader headerName="Exchange.HTTP_METHOD" id="_setHeader2">
                <constant>GET</constant>
            </setHeader>
            <setHeader headerName="Exchange.HTTP_PATH" id="_setHeader3">
                <simple>tasks</simple>
            </setHeader>
            <setHeader headerName="Exchange.HTTP_URI" id="_setHeader4">
                <simple>{{task.service.url}}</simple>
            </setHeader>
            <to id="_to1" uri="http4://DUMMY"/>
            <unmarshal id="_unmarshal1" ref="taskFormat"/>
            <split id="_split1" parallelProcessing="true">
                <simple>${body}</simple>
                <enrich id="_enrich1" strategyRef="taskNoteAggregationStrategy">
                    <constant>direct:restGetNoteById</constant>
                </enrich>
            </split>
        </route>
        <route id="getNoteByIdRoute">
            <from id="_from6" uri="direct:restGetNoteById"/>
            <setHeader headerName="id" id="_setHeader5">
                <simple>${body.noteId}</simple>
            </setHeader>
            <to id="_to6" uri="direct:prepareRequest"/>
            <setHeader headerName="Exchange.HTTP_METHOD" id="_setHeader6">
                <constant>GET</constant>
            </setHeader>
            <setHeader headerName="Exchange.HTTP_PATH" id="_setHeader7">
                <simple>notes/${header.id}</simple>
            </setHeader>
            <setHeader headerName="Exchange.HTTP_URI" id="_setHeader8">
                <simple>{{note.service.url}}</simple>
            </setHeader>
            <to id="_to7" uri="http4://DUMMY"/>
            <unmarshal id="_unmarshal2">
                <json library="Jackson" unmarshalTypeName="io.example.openapi.model.Note"/>
            </unmarshal>
        </route>
        <route id="deleteTaskRoute">
            <from id="_from4" uri="direct:restDeleteTask"/>
            <to id="_to4" uri="direct:501"/>
        </route>
        <route id="unimplementedOperationsRoute">
            <from id="from-for-unimplemented-operations-route" uri="direct:501"/>
            <log id="log-for-unimplemented-operations-route" message="API operation not yet implemented: ${headers.CamelHttpMethod} ${headers.CamelHttpPath}"/>
            <setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="setHeader-for-unimplemented-operations-route">
                <constant>501</constant>
            </setHeader>
            <setBody id="setBody-for-unimplemented-operations-route">
                <simple>API operation not implemented: ${headers.CamelHttpMethod} ${headers.CamelHttpPath}</simple>
            </setBody>
        </route>
        <route id="requestPreperationRoute">
            <from id="_from5" uri="direct:prepareRequest"/>
            <setBody id="_setBody1">
                <simple>null</simple>
            </setBody>
            <removeHeaders id="_removeHeaders1" pattern="CamelHttp*"/>
            <setHeader headerName="Exchange.CONTENT_TYPE" id="_setHeader1">
                <simple>MediaType.APPLICATION_JSON_VALUE</simple>
            </setHeader>
        </route>
    </camelContext>
</beans>
